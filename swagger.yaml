swagger: '2.0'

info:
  title: ArgentBank API documentation
  description: Contains all available API endpoints in this codebase (fixed), _and_ __suggests a way to implement transactions endpoints__
  termsOfService: http://swagger.io/terms/
  version: '1.1.0'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
tags: 
- name: 'User Module'
  description: 'User operations'
- name: 'Transactions Module'
  description: 'Transactions operations'

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API to Login
      parameters:
        - in: body
          name: Body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API to Signup
      parameters:
        - in: body
          name: Body
          description: Signup data
          required: true
          schema:
            $ref: '#/definitions/SignupRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Signup successful
          schema:
            $ref: '#/definitions/SignupResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Fetch profile
      description: API to fetch a user profile
      parameters:
        - in: header
          name: Authorization
          description: Bearer + jwt
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ProfileResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update profile
      description: API to update a user profile
      parameters:
        - in: header
          name: Authorization
          description: Bearer + jwt
          required: true
        - in: body
          name: Body
          description: User profile attributes to update
          required: true
          schema:
            $ref: '#/definitions/ProfileRequest'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ProfileResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch transactions
      description: API to fetch a user transactions
      parameters:
        - in: header
          name: Authorization
          description: Bearer + jwt
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid fields
        '401':
          description: User not authentified
        '403':
          description: User not authorized
        '500':
          description: Internal server error

  /transactions/{transactionsId}:
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transactions
      description: API to update a user transactions' category or notes
      parameters:
        - in: header
          name: Authorization
          description: Bearer + jwt
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to update
          required: true
          type: string
        - in: body
          name: Body
          description: Transaction attributes to update
          required: true
          schema:
            $ref: '#/definitions/TransactionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: User transactions updated successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid fields
        '401':
          description: User not authentified
        '403':
          description: User not authorized
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

securityDefinitions:
  Bearer:
    name: Authorization
    in: header
    description: \"Bearer\" + jwt (separated by a space)
    type: apiKey

definitions:
  LoginRequest:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  LoginResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          token:
            type: string

  SignupRequest:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  SignupResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
          password:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string

  ProfileRequest:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  ProfileResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string

  TransactionsRequest:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            date:
              type: string
            description:
              type: string
            amount:
              type: number
            balance:
              type: number
            type:
              type: string
            category:
              type: string
            notes:
              type: string
